syntax = "proto3";
package types;

option go_package = "github.com/ginchuco/ginchu/consensus";

import "block.proto";
import "tx.proto";

enum Phase {
  UNKNOWN = 0;
  ELECTION = 1;
  ELECTION_VOTE = 2;
  PROPOSE = 3;
  PROPOSE_VOTE = 4;
  PRECOMMIT = 5;
  PRECOMMIT_VOTE = 6;
  COMMIT = 7;
  COMMIT_PROCESS = 8;
  ROUND_INTERRUPT = 9;
}

message QuorumCertificate {
  View header = 1;
  ReplicaMessage payload = 2;
  AggregateSignature signature = 3;
}

message LeaderMessage {
  View header = 1;
  QuorumCertificate qc = 2;
  oneof Payload {
    Block block = 3;
    Signature vrf = 4; // only used in ELECTION phase
  }
  QuorumCertificate high_qc = 5; // only used in PROPOSE phase if a previous lock was seen
  Signature leader_signature = 6;
}

message ReplicaMessage {
  View header = 1;
  oneof Payload {
    Block block = 2;
    bytes leader_public_key = 3; // only used in ELECTION-VOTE
  }
  QuorumCertificate highQC = 4; // never in sign bytes, only used in ELECTION-VOTE to let the leader satisfy safe node predicate
  Signature partial_signature = 5;
}

message Message {
  View header = 1;
  oneof Payload {
    Block block = 2;
    bytes leader_public_key = 3; // only used in ELECTION-VOTE
    Signature vrf = 4; // only used in ELECTION phase
  }
  QuorumCertificate high_qc = 5; // used in PROPOSE phase if a previous lock was seen or ELECTION-VOTE phase if a previous lock was seen
  Signature signature = 6;
}

message ElectionMessage {
  View header = 1;
  Signature vrf = 2;
  Signature candidate_signature = 3;
}

message PacemakerMessage {
  View header = 1;
  Signature partial_signature = 2;
}

message View {
  uint64 height = 1;
  uint64 round = 2;
  Phase phase = 3;
}

message AggregateSignature {
  bytes signature = 1;
  bytes bitmap = 2;
}
