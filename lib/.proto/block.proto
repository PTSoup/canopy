syntax = "proto3";
package types;

option go_package = "github.com/ginchuco/ginchu/lib";

import "google/protobuf/timestamp.proto";
import "validators.proto";
import "tx.proto";

message BlockHeader {
  uint64 height = 1;
  bytes hash = 2;
  uint32 network_id = 3;
  google.protobuf.Timestamp time = 4;
  uint64 num_txs = 5;
  uint64 total_txs = 6;
  bytes last_block_hash = 7;
  bytes state_root = 8;
  bytes transaction_root = 9;
  bytes validator_root = 10;
  bytes next_validator_root = 11;
  bytes proposer_address = 12;
  repeated DoubleSignEvidence evidence = 13;
  repeated bytes bad_proposers = 14;
  QuorumCertificate last_quorum_certificate = 15;
}

message Block {
  BlockHeader block_header = 1;
  repeated bytes transactions = 2;
}

message BlockResult {
  BlockHeader block_header = 1;
  repeated TxResult transactions = 2;
}

message BeginBlockParams {
  BlockHeader block_header = 1;
  ConsensusValidators validator_set = 2;
}

message EndBlockParams {
  ConsensusValidators validator_set = 1;
}

message ProducerKeys {
  repeated bytes producer_keys = 1;
}

message DoubleSignEvidence {
  QuorumCertificate vote_a = 1;
  QuorumCertificate vote_b = 2;
  repeated bytes double_signers = 3;
}

message DoubleSigners {
  repeated bytes double_signers = 1;
}

message BadProposerEvidence {
  QuorumCertificate election_vote_qc = 1;
}

enum Phase {
  UNKNOWN = 0;
  ELECTION = 1;
  ELECTION_VOTE = 2;
  PROPOSE = 3;
  PROPOSE_VOTE = 4;
  PRECOMMIT = 5;
  PRECOMMIT_VOTE = 6;
  COMMIT = 7;
  COMMIT_PROCESS = 8;
  ROUND_INTERRUPT = 9;
  PACEMAKER = 10;
}

message QuorumCertificate {
  View header = 1; // replica vote view
  Block block = 2; // used for PROPOSE
  bytes block_hash = 3; // used after PROPOSE
  bytes proposer_key = 4; // only EV and PROPOSE
  AggregateSignature signature = 5; // aggregate signature from the current proposer message
}

message View {
  uint64 height = 1;
  uint64 round = 2;
  Phase phase = 3;
}

message AggregateSignature {
  bytes signature = 1;
  bytes bitmap = 2;
}
