syntax = "proto3";
package types;

option go_package = "github.com/canopy-network/canopy/store";

message CommitID {
  uint64 height = 1;
  bytes root = 2;
}

message StoreMerkleProof {
  bytes key = 1;
  bytes value = 2;
  SparseCompactMerkleProof proof = 3;
}

message SparseCompactMerkleProof {
  // SideNodes is an array of the sibling nodes leading up to the leaf of the proof.
  repeated bytes SideNodes = 1;
  // NonMembershipLeafData is the data of the unrelated leaf at the position
  // of the key being proven, in the case of a non-membership proof. For
  // membership proofs, is nil.
  bytes NonMembershipLeafData = 2;
  // BitMask, in the case of a compact proof, is a bit mask of the sidenodes
  // of the proof where an on-bit indicates that the sidenode at the bit's
  // index is a placeholder. This is only set if the proof is compact.
  bytes BitMask = 3;
  // NumSideNodes, in the case of a compact proof, indicates the number of
  // sidenodes in the proof when decompacted. This is only set if the proof is compact.
  uint32 NumSideNodes = 4;
  // SiblingData is the data of the sibling node to the leaf being proven,
  // required for updatable proofs. For unupdatable proofs, is nil.
  bytes SiblingData = 5;
}