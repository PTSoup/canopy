// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: consensus.proto

package consensus

import (
	types "github.com/ginchuco/ginchu/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Phase int32

const (
	Phase_UNKNOWN        Phase = 0
	Phase_ELECTION       Phase = 1
	Phase_ELECTION_VOTE  Phase = 2
	Phase_PROPOSE        Phase = 3
	Phase_PROPOSE_VOTE   Phase = 4
	Phase_PRECOMMIT      Phase = 5
	Phase_PRECOMMIT_VOTE Phase = 6
	Phase_COMMIT         Phase = 7
	Phase_COMMIT_PROCESS Phase = 8
)

// Enum value maps for Phase.
var (
	Phase_name = map[int32]string{
		0: "UNKNOWN",
		1: "ELECTION",
		2: "ELECTION_VOTE",
		3: "PROPOSE",
		4: "PROPOSE_VOTE",
		5: "PRECOMMIT",
		6: "PRECOMMIT_VOTE",
		7: "COMMIT",
		8: "COMMIT_PROCESS",
	}
	Phase_value = map[string]int32{
		"UNKNOWN":        0,
		"ELECTION":       1,
		"ELECTION_VOTE":  2,
		"PROPOSE":        3,
		"PROPOSE_VOTE":   4,
		"PRECOMMIT":      5,
		"PRECOMMIT_VOTE": 6,
		"COMMIT":         7,
		"COMMIT_PROCESS": 8,
	}
)

func (x Phase) Enum() *Phase {
	p := new(Phase)
	*p = x
	return p
}

func (x Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_consensus_proto_enumTypes[0].Descriptor()
}

func (Phase) Type() protoreflect.EnumType {
	return &file_consensus_proto_enumTypes[0]
}

func (x Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Phase.Descriptor instead.
func (Phase) EnumDescriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{0}
}

type QuorumCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *View               `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Payload   *ReplicaMessage     `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature *AggregateSignature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *QuorumCertificate) Reset() {
	*x = QuorumCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumCertificate) ProtoMessage() {}

func (x *QuorumCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumCertificate.ProtoReflect.Descriptor instead.
func (*QuorumCertificate) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{0}
}

func (x *QuorumCertificate) GetHeader() *View {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *QuorumCertificate) GetPayload() *ReplicaMessage {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *QuorumCertificate) GetSignature() *AggregateSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type LeaderMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *View              `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Qc     *QuorumCertificate `protobuf:"bytes,2,opt,name=qc,proto3" json:"qc,omitempty"`
	// Types that are assignable to Payload:
	//	*LeaderMessage_Block
	//	*LeaderMessage_Vrf
	Payload         isLeaderMessage_Payload `protobuf_oneof:"Payload"`
	HighQc          *QuorumCertificate      `protobuf:"bytes,5,opt,name=high_qc,json=highQc,proto3" json:"high_qc,omitempty"` // only used in PROPOSE phase if a previous lock was seen
	LeaderSignature *types.Signature        `protobuf:"bytes,6,opt,name=leader_signature,json=leaderSignature,proto3" json:"leader_signature,omitempty"`
}

func (x *LeaderMessage) Reset() {
	*x = LeaderMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderMessage) ProtoMessage() {}

func (x *LeaderMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderMessage.ProtoReflect.Descriptor instead.
func (*LeaderMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{1}
}

func (x *LeaderMessage) GetHeader() *View {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *LeaderMessage) GetQc() *QuorumCertificate {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (m *LeaderMessage) GetPayload() isLeaderMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *LeaderMessage) GetBlock() *types.Block {
	if x, ok := x.GetPayload().(*LeaderMessage_Block); ok {
		return x.Block
	}
	return nil
}

func (x *LeaderMessage) GetVrf() *types.Signature {
	if x, ok := x.GetPayload().(*LeaderMessage_Vrf); ok {
		return x.Vrf
	}
	return nil
}

func (x *LeaderMessage) GetHighQc() *QuorumCertificate {
	if x != nil {
		return x.HighQc
	}
	return nil
}

func (x *LeaderMessage) GetLeaderSignature() *types.Signature {
	if x != nil {
		return x.LeaderSignature
	}
	return nil
}

type isLeaderMessage_Payload interface {
	isLeaderMessage_Payload()
}

type LeaderMessage_Block struct {
	Block *types.Block `protobuf:"bytes,3,opt,name=block,proto3,oneof"`
}

type LeaderMessage_Vrf struct {
	Vrf *types.Signature `protobuf:"bytes,4,opt,name=vrf,proto3,oneof"` // only used in ELECTION phase
}

func (*LeaderMessage_Block) isLeaderMessage_Payload() {}

func (*LeaderMessage_Vrf) isLeaderMessage_Payload() {}

type ReplicaMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *View `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Types that are assignable to Payload:
	//	*ReplicaMessage_Block
	//	*ReplicaMessage_LeaderPublicKey
	Payload          isReplicaMessage_Payload `protobuf_oneof:"Payload"`
	HighQC           *QuorumCertificate       `protobuf:"bytes,4,opt,name=highQC,proto3" json:"highQC,omitempty"` // never in sign bytes, only used in ELECTION-VOTE to let the leader satisfy safe node predicate
	PartialSignature *types.Signature         `protobuf:"bytes,5,opt,name=partial_signature,json=partialSignature,proto3" json:"partial_signature,omitempty"`
}

func (x *ReplicaMessage) Reset() {
	*x = ReplicaMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaMessage) ProtoMessage() {}

func (x *ReplicaMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaMessage.ProtoReflect.Descriptor instead.
func (*ReplicaMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{2}
}

func (x *ReplicaMessage) GetHeader() *View {
	if x != nil {
		return x.Header
	}
	return nil
}

func (m *ReplicaMessage) GetPayload() isReplicaMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ReplicaMessage) GetBlock() *types.Block {
	if x, ok := x.GetPayload().(*ReplicaMessage_Block); ok {
		return x.Block
	}
	return nil
}

func (x *ReplicaMessage) GetLeaderPublicKey() []byte {
	if x, ok := x.GetPayload().(*ReplicaMessage_LeaderPublicKey); ok {
		return x.LeaderPublicKey
	}
	return nil
}

func (x *ReplicaMessage) GetHighQC() *QuorumCertificate {
	if x != nil {
		return x.HighQC
	}
	return nil
}

func (x *ReplicaMessage) GetPartialSignature() *types.Signature {
	if x != nil {
		return x.PartialSignature
	}
	return nil
}

type isReplicaMessage_Payload interface {
	isReplicaMessage_Payload()
}

type ReplicaMessage_Block struct {
	Block *types.Block `protobuf:"bytes,2,opt,name=block,proto3,oneof"`
}

type ReplicaMessage_LeaderPublicKey struct {
	LeaderPublicKey []byte `protobuf:"bytes,3,opt,name=leader_public_key,json=leaderPublicKey,proto3,oneof"` // only used in ELECTION-VOTE
}

func (*ReplicaMessage_Block) isReplicaMessage_Payload() {}

func (*ReplicaMessage_LeaderPublicKey) isReplicaMessage_Payload() {}

type ElectionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header             *View            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Vrf                *types.Signature `protobuf:"bytes,2,opt,name=vrf,proto3" json:"vrf,omitempty"`
	CandidateSignature *types.Signature `protobuf:"bytes,3,opt,name=candidate_signature,json=candidateSignature,proto3" json:"candidate_signature,omitempty"`
}

func (x *ElectionMessage) Reset() {
	*x = ElectionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElectionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElectionMessage) ProtoMessage() {}

func (x *ElectionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElectionMessage.ProtoReflect.Descriptor instead.
func (*ElectionMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{3}
}

func (x *ElectionMessage) GetHeader() *View {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ElectionMessage) GetVrf() *types.Signature {
	if x != nil {
		return x.Vrf
	}
	return nil
}

func (x *ElectionMessage) GetCandidateSignature() *types.Signature {
	if x != nil {
		return x.CandidateSignature
	}
	return nil
}

type PacemakerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header           *View            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	PartialSignature *types.Signature `protobuf:"bytes,2,opt,name=partial_signature,json=partialSignature,proto3" json:"partial_signature,omitempty"`
}

func (x *PacemakerMessage) Reset() {
	*x = PacemakerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacemakerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacemakerMessage) ProtoMessage() {}

func (x *PacemakerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacemakerMessage.ProtoReflect.Descriptor instead.
func (*PacemakerMessage) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{4}
}

func (x *PacemakerMessage) GetHeader() *View {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PacemakerMessage) GetPartialSignature() *types.Signature {
	if x != nil {
		return x.PartialSignature
	}
	return nil
}

type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round  uint64 `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Phase  Phase  `protobuf:"varint,3,opt,name=phase,proto3,enum=types.Phase" json:"phase,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{5}
}

func (x *View) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *View) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *View) GetPhase() Phase {
	if x != nil {
		return x.Phase
	}
	return Phase_UNKNOWN
}

type AggregateSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Bitmap    []byte `protobuf:"bytes,2,opt,name=bitmap,proto3" json:"bitmap,omitempty"`
}

func (x *AggregateSignature) Reset() {
	*x = AggregateSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateSignature) ProtoMessage() {}

func (x *AggregateSignature) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateSignature.ProtoReflect.Descriptor instead.
func (*AggregateSignature) Descriptor() ([]byte, []int) {
	return file_consensus_proto_rawDescGZIP(), []int{6}
}

func (x *AggregateSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AggregateSignature) GetBitmap() []byte {
	if x != nil {
		return x.Bitmap
	}
	return nil
}

var File_consensus_proto protoreflect.FileDescriptor

var file_consensus_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x08, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa2, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x02, 0x71,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x02, 0x71, 0x63, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x03, 0x76,
	0x72, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x03, 0x76, 0x72,
	0x66, 0x12, 0x31, 0x0a, 0x07, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x71, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75,
	0x6d, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x06, 0x68, 0x69,
	0x67, 0x68, 0x51, 0x63, 0x12, 0x3b, 0x0a, 0x10, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x0f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x85, 0x02, 0x0a,
	0x0e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x23, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x00, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x68, 0x69, 0x67, 0x68,
	0x51, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x06, 0x68, 0x69, 0x67, 0x68, 0x51, 0x43, 0x12, 0x3d, 0x0a, 0x11, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x03, 0x76, 0x72, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x03, 0x76, 0x72,
	0x66, 0x12, 0x41, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x12, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x76, 0x0a, 0x10, 0x50, 0x61, 0x63, 0x65, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a,
	0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x58, 0x0a, 0x04,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x12, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69,
	0x74, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x69, 0x74, 0x6d,
	0x61, 0x70, 0x2a, 0x97, 0x01, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4c, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52,
	0x4f, 0x50, 0x4f, 0x53, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x50, 0x4f,
	0x53, 0x45, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x45,
	0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x45, 0x43,
	0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4d, 0x4d,
	0x49, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x10, 0x08, 0x42, 0x26, 0x5a, 0x24,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x6e, 0x63, 0x68,
	0x75, 0x63, 0x6f, 0x2f, 0x67, 0x69, 0x6e, 0x63, 0x68, 0x75, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_consensus_proto_rawDescOnce sync.Once
	file_consensus_proto_rawDescData = file_consensus_proto_rawDesc
)

func file_consensus_proto_rawDescGZIP() []byte {
	file_consensus_proto_rawDescOnce.Do(func() {
		file_consensus_proto_rawDescData = protoimpl.X.CompressGZIP(file_consensus_proto_rawDescData)
	})
	return file_consensus_proto_rawDescData
}

var file_consensus_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_consensus_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_consensus_proto_goTypes = []interface{}{
	(Phase)(0),                 // 0: types.Phase
	(*QuorumCertificate)(nil),  // 1: types.QuorumCertificate
	(*LeaderMessage)(nil),      // 2: types.LeaderMessage
	(*ReplicaMessage)(nil),     // 3: types.ReplicaMessage
	(*ElectionMessage)(nil),    // 4: types.ElectionMessage
	(*PacemakerMessage)(nil),   // 5: types.PacemakerMessage
	(*View)(nil),               // 6: types.View
	(*AggregateSignature)(nil), // 7: types.AggregateSignature
	(*types.Block)(nil),        // 8: types.Block
	(*types.Signature)(nil),    // 9: types.Signature
}
var file_consensus_proto_depIdxs = []int32{
	6,  // 0: types.QuorumCertificate.header:type_name -> types.View
	3,  // 1: types.QuorumCertificate.payload:type_name -> types.ReplicaMessage
	7,  // 2: types.QuorumCertificate.signature:type_name -> types.AggregateSignature
	6,  // 3: types.LeaderMessage.header:type_name -> types.View
	1,  // 4: types.LeaderMessage.qc:type_name -> types.QuorumCertificate
	8,  // 5: types.LeaderMessage.block:type_name -> types.Block
	9,  // 6: types.LeaderMessage.vrf:type_name -> types.Signature
	1,  // 7: types.LeaderMessage.high_qc:type_name -> types.QuorumCertificate
	9,  // 8: types.LeaderMessage.leader_signature:type_name -> types.Signature
	6,  // 9: types.ReplicaMessage.header:type_name -> types.View
	8,  // 10: types.ReplicaMessage.block:type_name -> types.Block
	1,  // 11: types.ReplicaMessage.highQC:type_name -> types.QuorumCertificate
	9,  // 12: types.ReplicaMessage.partial_signature:type_name -> types.Signature
	6,  // 13: types.ElectionMessage.header:type_name -> types.View
	9,  // 14: types.ElectionMessage.vrf:type_name -> types.Signature
	9,  // 15: types.ElectionMessage.candidate_signature:type_name -> types.Signature
	6,  // 16: types.PacemakerMessage.header:type_name -> types.View
	9,  // 17: types.PacemakerMessage.partial_signature:type_name -> types.Signature
	0,  // 18: types.View.phase:type_name -> types.Phase
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_consensus_proto_init() }
func file_consensus_proto_init() {
	if File_consensus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_consensus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElectionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacemakerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_consensus_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LeaderMessage_Block)(nil),
		(*LeaderMessage_Vrf)(nil),
	}
	file_consensus_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ReplicaMessage_Block)(nil),
		(*ReplicaMessage_LeaderPublicKey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_consensus_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_consensus_proto_goTypes,
		DependencyIndexes: file_consensus_proto_depIdxs,
		EnumInfos:         file_consensus_proto_enumTypes,
		MessageInfos:      file_consensus_proto_msgTypes,
	}.Build()
	File_consensus_proto = out.File
	file_consensus_proto_rawDesc = nil
	file_consensus_proto_goTypes = nil
	file_consensus_proto_depIdxs = nil
}
